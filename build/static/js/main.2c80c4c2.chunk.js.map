{"version":3,"sources":["components/Home.js","components/Quiz.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Helmet","id","className","to","Quiz","data","time","setTime","setAnswers","numberOfQuestions","activeQuestion","setActiveQuestion","useState","selected","setSelected","error","setError","radiosWrapper","useRef","history","useHistory","useEffect","interval","countDownTime","Date","now","setInterval","total","minutes","Math","floor","seconds","window","location","href","clearInterval","alert","push","checkedInput","current","querySelector","checked","changeHandler","e","target","value","nextClick","prevState","q","question","a","ref","choices","map","val","i","type","name","onChange","onClick","Results","results","correctAnswers","setCorrectAnswers","correct","forEach","index","answer","length","App","answers","basename","path","exact","component","quizData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c80c4c2.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {Link} from 'react-router-dom'\nconst Home = () =>{\n    return(\n        <Fragment>\n            <Helmet><title>Quiz-App - Home</title></Helmet>\n        <div id='home'>\n            <section className=\"home-container\">\n                <h1 className=\"home-header\">Quiz App</h1>\n                <div className=\"play-button-container\" >\n                    <Link className=\"play-button\" to=\"/quiz\">Play</Link>\n                </div>\n            </section>\n        </div>\n        </Fragment>\n    )\n}\nexport  {Home};","import React, { Fragment } from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useState, useEffect, useRef} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\n\nconst Quiz = ({data,time, setTime, setAnswers, numberOfQuestions, activeQuestion, setActiveQuestion}) =>{\n    \n    const [selected, setSelected] = useState('');\n    const [error, setError] = useState('');\n    const radiosWrapper = useRef();\n    const history = useHistory();\n\n    useEffect(() => {\n            let interval = null;\n            const countDownTime = Date.now() + 120000;\n            interval = setInterval(()=>{\n                const now = new Date();\n                const total = countDownTime - now;\n\n                const minutes = Math.floor((total % (1000 *60 *60))/(1000*60));\n                const seconds = Math.floor((total % (1000 * 60)) / 1000);\n\n                if(total < 0 && window.location.href === \"http://localhost:3000/quiz\"){\n                    clearInterval(interval);\n                    setTime({minutes: 0, seconds: 0})\n                    alert(\"Time's up !! The quiz has ended\");\n                    history.push('/');\n                    setActiveQuestion(1);\n                    setAnswers([]);\n                } else if (window.location.href === \"http://localhost:3000/\" || window.location.href === \"http://localhost:3000/results\" ){\n                    clearInterval(interval);\n                    setTime({minutes: 0, seconds: 0})\n                }\n                else{\n                    setTime({\n                        minutes,\n                        seconds\n                    })\n                }   \n            })\n            //eslint-disable-next-line\n        },[])\n    useEffect(()=>{\n        const checkedInput = radiosWrapper.current.querySelector('input:checked');\n        if(checkedInput){\n            checkedInput.checked = false;\n        } \n    },[data])\n    const changeHandler = (e) =>{\n            setSelected(e.target.value);\n            if(error){\n                setError('');\n            }\n    }\n    const nextClick = (e)=>{\n        if(selected === ''){\n            return setError('Please select one option');\n        }\n        setAnswers(prevState => [...prevState, {q: data.question, a:selected}])\n        setSelected('')\n        if(activeQuestion < numberOfQuestions -1){\n            setActiveQuestion(activeQuestion +1);\n        }\n    }\n    const prevClick = (e)=>{\n        setSelected('');\n        if(activeQuestion < numberOfQuestions -1){\n            (activeQuestion === 1)? setActiveQuestion(activeQuestion) :  setActiveQuestion(activeQuestion -1);\n        }\n    }\n\n    const quitButton = () =>{\n        setActiveQuestion(1);\n        setAnswers([]);\n        \n    }\n    return(\n            <Fragment >\n                <Helmet><title>Quiz Page</title></Helmet>\n                <div className=\"questions-container\">\n                <section className = 'questions'>\n                <h1 className=\"quiz-header\">Quiz Mode</h1>\n                    <div className=\"time-container\">\n                            <span className=\"left\">{activeQuestion} of 10</span>\n                            <span className=\"right\">time left: {time.minutes}:{(time.seconds)>=10?(time.seconds):\"0\"+(time.seconds)}</span>\n                    </div>\n                <h3 className=\"quiz-question\">{activeQuestion}. {data.question}</h3>\n                <div className=\"options-container\" ref={radiosWrapper}>\n                    {\n                        data.choices.map((val, i)=>(\n                            <label className=\"rad-label\" key={i}>\n                                <input type=\"radio\" className = \"rad-input\" \n                                name=\"answer\" value={val} onChange={changeHandler}/> \n                                <div className=\"rad-design\"></div>\n                                <div className=\"rad-text\">{val} </div><br/>\n                            </label>\n                        ))\n                    }\n                </div>\n                <div className=\"error-div\">{error}</div>\n                <div className=\"bottom-container\">\n                    <button className=\"previous-button\" onClick={prevClick}>Previous</button>\n                    {activeQuestion < numberOfQuestions -1 && \n                    <button className=\"next-button\" onClick={nextClick} >Next</button>\n                    }\n                    {activeQuestion === numberOfQuestions -1 && \n                    <Link  to=\"/results\">\n                    <button className =\"submit-button\" onClick={nextClick} >\n                    Submit</button></Link>\n                    }  \n                    <Link to=\"/\">\n                    <button className=\"quit-button\" onClick={quitButton} >Quit</button>\n                    </Link>\n                    \n                </div>\n                </section>\n                </div>\n            </Fragment>\n    )\n}\n\nexport default Quiz;","import React, {Fragment, useEffect, useState} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {Link} from 'react-router-dom';\n\nconst Results = ({results, data, setAnswers, setActiveQuestion })=>{\n  \n    const[correctAnswers, setCorrectAnswers] = useState(0);\n\n    useEffect(()=>{\n        let correct = 0;\n        results.forEach((val, index) =>{\n            if(val.a === data[index + 1].answer){\n                correct++;\n            }\n        })\n        setCorrectAnswers(correct);\n        //eslint-disable-next-line\n    },[]);\n\n    const tryAgain = () =>{\n        setActiveQuestion(1);\n        setAnswers([]);\n    }\n    const exit = () =>{\n        setActiveQuestion(1);\n        setAnswers([]);\n    }\n\n    return(\n        <Fragment>\n        <Helmet><title>Results Page</title></Helmet>\n        <div className=\"results-container\">\n        <div className=\"results\">\n            <h1 className=\"results-header\">Results</h1>\n            <p className=\"score\">You scored {correctAnswers} of {data.length-1}</p>\n            <div className=\"bottom-div\">\n                <Link to=\"/quiz\">\n                <button className=\"tryagain-button\" onClick={tryAgain}>Try Again</button>\n                </Link>\n                <Link to=\"/\">\n                <button className=\"exit-button\" onClick={exit}>exit</button>\n                </Link>\n            </div>\n        </div>\n        </div>\n        </Fragment>\n    )\n}\nexport default Results;","import React, {useState} from 'react';\nimport {Home} from \"./components/Home\";\nimport Quiz from './components/Quiz';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport Results from \"./components/Results\";\nimport quizData from './questions.json';\n\n\nfunction App() {\n\n  const [activeQuestion, setActiveQuestion] =  useState(1);\n  const [answers, setAnswers] = useState([]);\n  const [time, setTime] = useState ({});\n\n\n  return (\n    <div className=\"App\">\n\n    <BrowserRouter basename='/quiz-app'>\n      <Route path=\"/\" exact component={Home}></Route>\n\n      <Route path=\"/quiz\" ><Quiz  \n      data={quizData.data[activeQuestion]}\n      time = {time}\n      setTime = {setTime}\n      setAnswers={setAnswers}\n      numberOfQuestions={quizData.data.length}\n      activeQuestion={activeQuestion}\n      setActiveQuestion={setActiveQuestion}/></Route> \n\n      <Route path=\"/results\"> <Results\n      results = {answers}\n      data = {quizData.data}\n      setAnswers={setAnswers}\n      setActiveQuestion={setActiveQuestion}\n      /></Route>\n    </BrowserRouter>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/styles.css'\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}